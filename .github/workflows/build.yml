name: 'Terraform'

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  terraform_deploy:
    name: 'Terraform Deploy'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: './examples/basic-vpc'

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Plan
      run: terraform plan

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve

  terrafrom_test:
    needs: terraform_deploy
    name: 'Terraform Test'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: './test/basic-vpc'

    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x

    - name: Checkout
      uses: actions/checkout@v2

    - name: Test Terraform Deployment
      run: go test -v
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  terraform_destroy:
    needs: terrafrom_test
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: './examples/basic-vpc'

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Destroy
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform destroy -auto-approve